function [fit,erorr]=cal_fit3(newfeat,p,Boston,cr)%%%%calculate fitness for agents in third population
indices = crossvalind('Kfold',newfeat(:,1),10);%%dataset with new features
indices1 = crossvalind('Kfold',Boston(:,1),10);%%original
erorr=0;
erorr1=0;
w1=0.1;
w2=0.1;
w3=0.8;
n=size(Boston(:,end-1),2);
for i = 1:10
    test = (indices == i); 
    train = ~test;
%     class = classify(meas(test,:),meas(train,:),species(train,:));
%     classperf(cp,class,test);
    tt=Boston(:,end);
    switch cr
        case 'r'
    Mdl = fitrsvm(newfeat(train,:),tt(train,1)); 
        otherwise
    Mdl = fitcsvm(newfeat(train,:),tt(train,1)); 
    end

    yfit = predict(Mdl,newfeat(test,:));
    %op=tt(test,:);
%     erorr =erorr+immse(tt(test,1),yfit);
    erorr =erorr+sse(Mdl,tt(test,1),yfit);

end
for i = 1:10
    test1 = (indices1 == i); 
    train1 = ~test1;
%     class = classify(meas(test,:),meas(train,:),species(train,:));
%     classperf(cp,class,test);
    tt1=Boston(:,end);
    switch cr
        case 'r'
    Mdl1 = fitrsvm(Boston(train1,:),tt1(train1,1));
        otherwise
    Mdl1 = fitcsvm(Boston(train1,:),tt1(train1,1));
    end
    yfit1 = predict(Mdl1,Boston(test,:));
    %op=tt(test,:);
    erorr1 =erorr1+immse(tt(test,1),yfit1);
    

end
erorr=erorr/10;
erorr1=erorr1/10;
%ccoef=corr(newfeat,Boston(:,end));
%fit=w1*erorr+w2*(1/max(ccoef))+w3*size(newfeat,2);
mallows=(erorr/erorr1)-n+(2*p);
fit=w1*erorr+w2*size(newfeat,2)+w3*mallows;
end
